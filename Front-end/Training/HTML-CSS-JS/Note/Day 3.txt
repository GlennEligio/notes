Day 3

Font Properties
font-family
	> defines the font family to use to display the text
		- ex: san-serif, roboto, chiller, monospace, etc
font-size
	> defines the font size of each character in text
	> we can pass either measurements (px, em, rem, etc.)
	> or use predefine constants (small, large, medium)
font-style
	> defines the style of the font
		- ex: italic, bold, normal
font-weigth
	> defines the weigth of strokes of each line in character
	> more font-weight, thicker the stroke
font-variant
	> defines the variant of text
		- ex: small-caps, all-caps, capitalized


COLOR PROPERTIES
1. 


PSEUDO CLASSES
	> classes specific to each event that happens in an element
	> the syntax is
		element:event
	> ex: button:hover to define button element when cursor is hovering
1. :link
1. :visited
2. :hover
3. :active
4. :link


BACKGROUND PROPERTIES
1. background
	> changes the background of the content of element
	> takes hex, predefine colors, etc
2. background-color
	> changes the background color of the element
3. background-image
	> defines the image that will be used as background of element
	> takes an href of image
4. background-position
	> defines the position of the background used



CSS BORDERS
1. border-width
	> defines the width of border
	> takes measurement value (px, em, rem, etc)
2. border-color
	> defines the color of the border
	> takes hex, or predefine colors
3. border-style
	> defines the style of the border
	> can have values like
		- solid
		- dashed
		- dotted
		- double
		- etc
4. border
	> used for shorthand of the three properties of borders (style, color, width)
	> we can pass three values of these three properties in this property
		- ex: border: 1px solid black
5. border-top, border-right, border-bottom, border-left
	> used to refer to a specific side of border
	> we can define the properties of these specific sides as well
		- ex: border-top-style: solid, border-bottom-width:2px
6. border-radius
	> defines the radius of the rounded corners in the border


CSS LIST PROPERTIES
1. list-style
	> defines how we style the icons to signify a list
	> can have values like		
		a. upper-alpha / lower-alpha
			- uses alphabetical letters
		b. circle
		c. square



CSS WIDTH-HEIGHT
1. width
	> defines the width of the content
2. height
	> defines the height of the content
3. line-height
	> defines the height of each line of the element
	> different on height where in it takes effect to each line of text in element
4. max-height / min-height
	> defines the maximum and minimum height of the element
5. max-width / min-width
	> defines the max and min width of the element



CSS FLOAT
1. float
	> defines the position of the element where it will float
	> takes values like
		- left
		- right

CSS CLEAR
1. clear
	> defines the 


CSS CLIP
1. clip
	> used to clip an element
	> takes four units of values which defines the four points of the final image crop


CSS CURSOR
1. cursor
	> defines the style of cursor when it hovers to a specific element
	> can take values like
		- help
		- progress
		- pointer
		- zoom-in


CSS VISIBILITY
1. visibility
	> defines the visibility of the element
	> takes value of 			
		- hidden
			= hides the element, BUT it still takes space
		- visible
			= shows the element


CSS DISPLAY
1. display
	> defines how we display the element
	> takes values like
		- block
			= displays element as a block
		- inline
			= displays element as an inline
		- none
			= does not display the element
			= WILL NOT TAKE SPACE


CSS POSITION PROPERTIES
1. position
	> defines the positioning style of element
	> can take values like
		- absolute
			= with this, the positioning of element will be relative to start of viewport (top-right)
			= used in conjunction of left / right / top / bottom to define position
		- relative
			= with this, the positioning of the element will be relative to its origin position
			= used in conjuction of left / right / top / bottom to define position
		- static
2. left / right / top / bottom
	> defines the distance of the element away from the start

	


JAVASCRIPT
Variables
	> used to hold data
	> composed of keyword + name + data	
		syntax: keyword name = data
	> ex: var name = "Glenn"

Objects
	> used to represent an Object
	> variable whose value is an associative array
		- composed of key + value
	> in example below, 
		- family is the object, and 
		- father, mother, sister, brother are the properties
EX:
var family = {
	father: "a",
	mother: "b",
	sister: "c",
	brother: "d"
}


Function
	> used to create a logic in the JavaScript
	> needs components like
		- function keyword
		- function name
		- parameters
		- logic
		- return value (OPTIONAL)

Syntax of Function
function name(param1, param2){
	// put logic here
	var result = param1 + param2;
	return result;
}


Variable in Console
1. console	
	> represents the console
	> have the following method
		a. write()
			- used to write something in console


Variables in HTML document
1. document
	> refers to the HTML document
	> have several functions like
		a. write()
			- used to write something in the HTML document
			- will break whatever you pass into it
			- can take HTML elements
		b. getElementById()
			- used to fetch an element by its id