55 RHCSA RHEL 8 - Configure key-based authentication for SSH

Relevant files/folder
/home/$user/.ssh
 > location of where the private and public keys are generated with ssh-keygen


Setting up Putty to authenticate using SSH keys
1. Open PuttyGen
	> comes with putty download
2. Generate key
3. Define the Comment and Passphrase
4. Save public and private keys
	- public key must have .pub extension, private keys must not have extension
5. Open Pageant.exe
	> comes with Putty download
6. Check the application tray at the bottom right
	> right click the pageant
	> add keys
	> select the private key you generated with puttygen (will have .ppk extension)
	> close the pageant, it will run in background
7. Open the public key with notepad or any text editor
	> copy the content from "ssh-rsa"
	> we will use this in the Server to authorized the Client machine
ex:
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0cPcJFib4CYGQoN0YReWjf+vSSfUsOscvr4DJl1AYUHLRxcuCxVtnbLmkb55CNPmH09N/YwqtW9QVxagr5ZyerBpYNijrWn/Cfd8XiXowiMwJGLz8Y4UmRFnYnktAuj7PvJYv98GApFXrCz1r6bs/0Ki6QL64RB4HnWftHxuuOcJHbD9LMsD6i1fUDX6R9eft5v49nT7jx9HeKLwOyJWAiN8HUPPMFkysJwmua7Vy84SVlxjjUGnfIMjleY9xw4n8kYhtQwXuVdBcIRJr/vtw2MDtryXr/zK66q18yDSibbADdqI9HLQ/41a2Y4AlH7bEyloUC7gIl71J7gFbhApx Host-Machine-2



Setting up SSH key-based authorization in a server
1. Enable NAT Networking and set it up so that SSH request in host redirects to the RHEL8 VM's port 22 (SSH port)
2. Login as one of the users in RHEL8 VM
3. Create ssh private and public keys
	$ ssh-keygen
4. Enter a passphrase
	> if you dont enter a passphrase, the client will only need the public key
	> we prefer to enter a passphrase for 2FA, the pub key and passphrase
5. Check the .ssh directory on the homedir of the user
	> a private and public key should be generated
	> public key is the one with .pub extension
6. Create a file named "autorized_key" and set its permission to r-x on user/owner
	$ touch authorized_keys
	$ chmod 600 authorized_keys
7. Add the public key of the client to the "authorized_keys" file on new line
	$ vi authorized_keys
	> the public key is generated by the client itself
8. The Server will now use the public keys in authorized_keys to determine if the SSH client connecting is authorized
	> with this, no password is needed to use


Connect Putty Client
1. Open putty client
2. The pageant.exe must be running in background
	> this will make the ssh connection in putty client be authenticated using the SSH keys it contains
3. Connect to the server
	> use the login that we used in server to create the "authorized_keys" file


Commands
ssh-keygen
 > generates a ssh key to be used to key-based authentication
 > 




