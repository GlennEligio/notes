Capstone Part 7

NOTE: Jenkins Server must establish SSH connection to the Production Server, copy the SSH public key generated by ssh-keygen in the /root/.ssh/authorized_keys of ProdServer (in case you skipped part 6)


Setup Docker in Production Server
1. Install docker
	apt update
	apt install docker.io



Add Credentials of Production Server in Jenkins
1. Go to the Credentials Page
	> Dashboard > Manage Jenkins > Manage Credentials
2. Go to Add Credentials page	
	> click (global)
	> press "Add Credentials" at the left side
3. Create a Credential
	> if you have Server with username/password, select "Username with password" for Kind
	> if you use .pem file for accessing Server, select "SSH username with private key"
		- pass the content of .pem file to Private Key (check Enter Directly)
		- open .pem file with Notepad and paste it in textbox
	> for username, use the appropriate username for the Server ("ubuntu" for Ubuntu Servers)
	> press OK
4. Check the Credentials we made 
	> Dashboard > Manage Jenkins > Manage Credentials





Connect Production Server as Jenkins Node
1. Go to Nodes Page
	> Dashboard > Manage Jenkins > Manage Nodes and Clouds
2. Create New Node
	> press New Node at the left
		- give a Node name (prodserver)
		- check "Permanent Agent"
		- press OK
3. Configure the Prod Node agent
	> remote root directory
		- /home/ubuntu/jenkins
	> labels
		- prod
	> Usage	
		- Only build jobs with label expressions matching this node
	> Launch method
		- select "Launch agents via SSH"
			> Host
				- pass the Production Server's private Ip
			> Credentials
				- select the credentials we made earlier
			> Host Key Verification Strategy
				- select "Manually trusted key Verification Strategy"




Create Job to run the prodserver Node
1. Create a New Job
	> "ProdDocker"
	> Maven project template
	> in General
		- check Github project and pass the BankingMicroservice github repo url
		- check "Restrict where this project can be run" and pass the label we set in prodserver node (prodserver or prod)
	> in Source Code Management
		- check Git and pass the BankingMicroservice github repo url 
	> in Build
		- in Goals and options, pass "clean package"
	> in Post Steps
		- add Execute shell and pass the following commands

cd <root directory of ProdServer>/workspace/<job name>
sudo docker rm -f $(sudo docker ps -a -q)
sudo docker rmi -f $(sudo docker images -q)
sudo docker build . -t web:$BUILD_NUMBER
sudo docker run -i web:$BUILD_NUMBER


EX:
cd /home/ubuntu/jenkins/workspace/ProdDocker
sudo docker container prune --force
sudo docker image prune --force
sudo docker build . -t web:$BUILD_NUMBER
sudo docker run -i web:$BUILD_NUMBER


Test the Job
1. Build the Job
2. If Job succeeded, check the Production Server files
	ls /home/ubuntu/jenkins/workspace/ProdDocker
3. Check Docker images
	docker images
4. Check Docker containers 
	docker ps -a
	
	