26. useLayoutEffect() hook


useLayoutEffect() hook
	> similar to useEffect() in terms of syntax and usage where we need to run side effects when things change in component
	> biggest difference is WHEN the function we passed into the hooks is actually run

useEffect
	> run ASYNCHRONOUSLY
	> executed AFTER DOM is painted

useLayoutEffect
	> run SYNCHRONOUSLY
	> executed AFTER DOM is calculated, but BEFORE DOM is painted


When to use the useLayoutEffect() vs useEffect()
1. The biggest reason for using useLayoutEffect is when the code being run directly modifies the DOM in a way that is observable to the user.
	> For example, if I needed to change the background color of a DOM element as a side effect it would be best to use useLayoutEffect since we are directly modifying the DOM and the changes are observable to the user. If we were to use useEffect we could run into an issue where the DOM is painted before the useEffect code is run. This would cause the DOM element to be the wrong color at first and then change to the right color due to the useEffect code.
	> In short, if we use the useEffect(), it may cause a visual jitter that may be observable to users
	> With useLayoutEffect, we can avoid this jitter since it runs the function that modifies DOM before showing it to users