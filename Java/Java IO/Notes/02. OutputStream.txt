02. OutputStream


OutputStream
	> an abstract Class
	> superclass of all classes representing an output stream of bytes
	> An OutputStream accepts output bytes and sends them to some sink
	> Application that need to define a subclass of OutputStream must always provide at least a method that writes one byte of output


Methods
void close()
	> returns void
	> closes this output stream and releases any system resources associated with this stream
	> used to free up resources

void flush()
	> flushes this output stream and forces any buffered output bytes to be written out
	> this method is the one responsible to send whatever bytes we added in output stream with write() method
	> NOTE: When buffer reaches the byte limit, it will AUTOMATICALLY do a flush()

void write(byte[] b)
	> write b.length bytes from the speicifed byte array to this output stream

void write(byte[] b, int off, int len)
	> write len bytes from the specified byte array starting at offset off to this output stream

abstract void write(int b)
	> write the specific byte to this output stream



System.out
	> creates an instance of an OutputStrea 
	> by default, it uses the PrintStream implementation
	> print() and println() is a method of PrintStream where we can print messages in console


OutputStream usage
	> use write() to store the bytes in buffer
	> use flush() to send the bytes stored in buffer
		-> this will empty out the buffer
	> use close() to close the OutputStream and free up resources
		-> typically placed in the finally block of try-catch-finally


NOTES:
1. write(int b) method throws an IOException in all subclasses of OutputStream EXCEPT PrintStream