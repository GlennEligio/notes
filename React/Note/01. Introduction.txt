01. Introduction

React JS Crash Course Traversy Media


What is React?
	> React is a JavaScript library for building user interfaces
	> React runs on the client as a SPA (Single Page App), but can be used to build full stack apps by communicating with a Server/API
		- e.g. MERN stack
	> React is often referred to as a front-end "framework" because it is capable and directly comparable to a framework such as Angular or Vue 
	> Maintained by Facebook


Why use React?
1. Structure the "view" layer of your application
	> React serves the "View" layer of MVC architecture
2. Reusable components with their own state/props
	> we can assign properties to a Component (one-way, immutable)
	> we can also reassign the Component's States to update the display
3. JSX - Dynamic markup
	> stands for Javascript Syntax eXtension
	> combines both Presentation (Markup) and Logic
4. Interactive UIs with Virtual DOM
	> each portion of the Webpage has its own Virtual DOM
	> these means that it does not have to reload the whole page to update a portion of it
5. Performance & testing
6. Very popular in the industry



Prerequisites - What should you know first?
1. Good handle on JavaScript
	- not recommended to jump into React without learning JS first
2. Data types, variables, functions, loops, etc
3. Promises & asynchronous programming
4. Array methods like forEach() & map()
5. Fetch API & making HTTP requests


Tools
1. Text Editor (VSCode)
2. Node
3. npm
4. React Developer Tools extension in browser
5. ES7 React/Redux/React Native Snippets extension in VSCode


Create React App 
1. Install npm
	> go to NodeJS site
	> installing NodeJS automatically install npm as well
2. Check Node and npm version
	> node must be >= 8.10
	> npm must be >= 5.6

	node --version 
	npm --version
3. Do the following command in Terminal
	> "react-task-tracker" in first command represents the React app name

	npx create-react-app react-task-tracker
	cd my-ap
	npm start
4. Access the React app that is currently running
	> by default, runs in localhost:3000