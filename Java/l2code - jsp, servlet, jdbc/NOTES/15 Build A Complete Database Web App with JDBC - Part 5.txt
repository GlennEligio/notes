15 Build A Complete Database Web App with JDBC - Part 5

Content
100 Delete Student - Overview
101 Delete Student -  Creating the Delete Link
102 Delete Student - Developing the Servlet and JDBC Code








100 Delete Student - Overview

Topics
1. Demo - Delete Student
2. Big Picture
3. Sequence Diagram


Demo - Delete Student
 > new link is added in Action Column of Student list table
 > when "Delete" link is clicked, it will show a prompt to reaffirm Student deletion

Big Picture
1. When Delete link is click, a request with "command" parameter of "DELETE" will be sent to StudentController Servlet
2. StudentController Servlet will call the StudentDbUtil method for deleting Student
3. StudentDbUtil method will communicate with database to delete the Student row data


Sequence Diagram
1. StudentControllerServlet's doGet() will handle request with command=DELETE
2. For that case, StudentDbUtil's deleteStudent(...) is executed, then the listStudents(...)


To Do List
1. Add "Delete" link on JSP
2. Add code for "Delete" to StudentControllerServlet
3. Add code for "Delete" to StudentDbUtil










101 Delete Student -  Creating the Delete Link

GOAL:
1. Add "Delete" link in the Action column of Student
2. Set up StudentControllerServlet link with "command" parameter "DELETE" using JSTL Core tag c:url
3. Set up Delete link onclick where it will do an if check to confirm(). If confirm is false, the onclick function will return false
	> this will make the link tag not navigate, hence staying in the same page


// table inside list-students.jsp
			<table>
				<tr>
					<th>First Name</th>
					<th>Last Name</th>
					<th>Email</th>
					<th>Action</th>
				</tr>
				<c:forEach var="tempStudent" items="${STUDENT_LIST}">
				
					<!-- UPDATE URL -->
					<c:url var="tempLink" value="StudentControllerServlet">
						<c:param name="command" value="LOAD"/>
						<c:param name="studentId" value="${tempStudent.id }"/>
					</c:url>
					
					<!-- Delete URL -->
					<c:url var="deleteLink" value="StudentControllerServlet">
						<c:param name="command" value="DELETE"/>
						<c:param name="studentId" value="${tempStudent.id }"/>
					</c:url>
				
					<tr> 
						<td>${tempStudent.firstName}</td>
						<td>${tempStudent.lastName}</td>
						<td>${tempStudent.email}</td>
						<td><a href="${tempLink}">Update</a> | 
							<a href="${deleteLink }"
								onclick="if (!(confirm('Do you want to delete this Student'))) return false">Delete</a></td>
					</tr>
				</c:forEach>
			</table>








102 Delete Student - Developing the Servlet and JDBC Code

GOAL:
1. Handle request with "command" parameter value of "DELETE" in StudentControllerServlet doGet()
2. Create deleteStudent() of StudentControllerServlet and StudentDbUtil classes

// StudentControllerServlet doGet()
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		try {
			// read the "command" parameter
			String theCommand = request.getParameter("command");
			
			if (theCommand == null) {
				theCommand = "LIST";
			}
			
			switch(theCommand) {
			case "LIST":
				listStudents(request, response);
				break;
			case "ADD":
				addStudent(request, response);
				break;
			case "LOAD":
				loadStudent(request, response);
				break;
			case "UPDATE":
				updateStudent(request, response);
				break;
			case "DELETE":
				deleteStudent(request, response);
				break;
			default:
				listStudents(request, response);
			}
		} catch (Exception e) {
			throw new ServletException(e);
		}
	}


// deleteStudent() of StudentControllerServlet
	private void deleteStudent(HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		// get student id from request
		Integer studentId = Integer.parseInt(request.getParameter("studentId"));
		
		// execute StudentDbUtil method
		studentDbUtil.deleteStudent(studentId);
		
		// return the user to list of students
		listStudents(request, response);
	}


// deleteStudent() of StudentDbUtil
	public void deleteStudent(Integer studentId) throws SQLException {
		
		Connection myConn = null;
		PreparedStatement myStmt = null;
		
		try {
			
			// get db connection
			myConn = dataSource.getConnection();
			
			// create sql query
			String sql = "DELETE FROM student WHERE id=?";
			myStmt = myConn.prepareStatement(sql);
			myStmt.setInt(1, studentId);
			
			// execute query
			myStmt.execute();
			
		} finally {
			// clean up jdbc code
			close(myConn, myStmt, null);
		}
		
	}

